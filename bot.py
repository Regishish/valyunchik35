import logging
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils import executor
import os
from datetime import datetime, timedelta

API_TOKEN = os.getenv("API_TOKEN")
USER_IDS = [int(uid) for uid in os.getenv("USER_IDS", "").split(",")]

bot = Bot(token=API_TOKEN, parse_mode=types.ParseMode.HTML)
dp = Dispatcher(bot)
logging.basicConfig(level=logging.INFO)

photos_with_captions = [
    ("IMG_9126.jpeg", "‚òÄÔ∏è –ö–æ–≥–¥–∞ —Ç—ã –¥–µ—Ä–∂–∏—à—å –º–æ—é —Ä—É–∫—É ‚Äî –º–Ω–µ —Å–ø–æ–∫–æ–π–Ω–æ."),
    ("IMG_9111.jpeg", "–¢—ã ‚Äî –º–æ–π –¥–æ–º."),
    ("IMG_4979.jpeg", "–¢—ã- —Å–∞–º—ã–π –ª—É—á—à–∏–π. –ü–æ–º–Ω–∏ –æ–± —ç—Ç–æ–º –≤—Å–µ–≥–¥–∞!"),
    ("IMG_5377.jpeg", "–¢—ã —Å–∞–º—ã–π —É–º–Ω—ã–π –º—É–∂—á–∏–Ω–∞ –∏–∑ –≤—Å–µ—Ö, –∫–æ–≥–æ —è –∑–Ω–∞—é."),
    ("IMG_5390.jpeg", "–¢—ã - –º–æ—è –æ–ø–æ—Ä–∞."),
    ("IMG_5863.jpeg", "–õ—é–±–ª—é, –∫–æ–≥–¥–∞ —Ç—ã —Å–º–æ—Ç—Ä–∏—à—å —Ç–∞–∫, –∫–∞–∫ –Ω–∞ —ç—Ç–æ–º —Ñ–æ—Ç–æ."),
    ("IMG_6353.jpeg", "–¢—ã —É–º–µ–µ—à—å –±—ã—Ç—å —Ä–∞–∑–Ω—ã–º ‚Äî –∏ —è –ª—é–±–ª—é –∫–∞–∂–¥–æ–µ —Ç–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ."),
    ("IMG_7087.jpeg", "–£ –Ω–∞—Å —Å —Ç–æ–±–æ–π –≤—Å–µ –ø–æ–ª—É—á–∏—Ç—Å—è!."),
    ("IMG_7761.jpeg", "–° —Ç–æ–±–æ–π –¥–∞–∂–µ —Å–∞–º—ã–µ –±—É–¥–Ω–∏—á–Ω—ã–µ –¥–Ω–∏ ‚Äî –∫–∞–∫ –ø—Ä–∞–∑–¥–Ω–∏–∫."),
    ("2B7E2B03.jpeg", "–¢—ã —É–º–µ–µ—à—å –±—ã—Ç—å –Ω–∞—Å—Ç–æ—è—â–∏–º. –ò —ç—Ç–æ –±–µ—Å—Ü–µ–Ω–Ω–æ."),
    ("B31FB0E2.jpeg", "–Ø –ª—é–±–ª—é –Ω–∞—Å. –û—Å–æ–±–µ–Ω–Ω–æ ‚Äî –≤ —Ç–∞–∫–∏–µ –º–æ–º–µ–Ω—Ç—ã."),
    ("TXD5wkJc.jpeg", "–¢—ã ‚Äî –º–æ–π —Å–∞–º—ã–π –ª—É—á—à–∏–π —á–µ–ª–æ–≤–µ–∫ –Ω–∞ —Å–≤–µ—Ç–µ"),
]

async def scheduled_messages():
    for user_id in USER_IDS:
        await bot.send_message(user_id, "üåÖ –î–æ–±—Ä–æ–µ —É—Ç—Ä–æ! –°–µ–≥–æ–¥–Ω—è —Ç—ã –≤ –∏–≥—Ä–µ. –° —Ç–µ–±—è - —Ö–æ—Ä–æ—à–µ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–¥–∞–Ω–∏–π, –∞ —Å –º–µ–Ω—è- —Å—é—Ä–ø—Ä–∏–∑! ‚ù§Ô∏è")
        for i, (photo, caption) in enumerate(photos_with_captions):
            await asyncio.sleep(3600 if i > 0 else 10)
            with open(f"media/{photo}", "rb") as img:
                await bot.send_photo(user_id, img, caption=caption)

@dp.message_handler(commands=["start", "go"])
async def send_welcome(message: types.Message):
    if message.from_user.id in USER_IDS:
        markup = InlineKeyboardMarkup().add(
            InlineKeyboardButton("–ù–∞—á–∞—Ç—å –∏–≥—Ä—É", callback_data="start_game")
        )
        await message.answer("üéâ –ü—Ä–∏–≤–µ—Ç! –ì–æ—Ç–æ–≤ –Ω–∞—á–∞—Ç—å –¥–µ–Ω—å —Å —Å—é—Ä–ø—Ä–∏–∑–∞–º–∏?", reply_markup=markup)

@dp.callback_query_handler(lambda c: c.data == "start_game")
async def start_game(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    await bot.send_message(callback_query.from_user.id, "üéØ –ü–µ—Ä–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ: —Å—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä—É–π –∑–∞–≤—Ç—Ä–∞–∫ –∏ –æ—Ç–ø—Ä–∞–≤—å –µ–≥–æ —Å—é–¥–∞.")

@dp.message_handler(content_types=types.ContentType.PHOTO)
async def handle_photo(message: types.Message):
    await message.reply("‚úÖ –§–æ—Ç–æ –ø–æ–ª—É—á–µ–Ω–æ! –ñ–¥–∏ —Å–ª–µ–¥—É—é—â–µ–µ –∑–∞–¥–∞–Ω–∏–µ.")

async def on_startup(dp):
    asyncio.create_task(scheduled_messages())

if __name__ == "__main__":
    from aiogram import executor
    executor.start_polling(dp, on_startup=on_startup)
